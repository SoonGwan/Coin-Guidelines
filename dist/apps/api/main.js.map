{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/api/index.ts","webpack:///./apps/api/src/api/v1/cryptoInfo/cryptoInfo.ts","webpack:///./apps/api/src/api/v1/cryptoInfo/index.ts","webpack:///./apps/api/src/api/v1/cryptoMap/Coin.ts","webpack:///./apps/api/src/api/v1/cryptoMap/index.ts","webpack:///./apps/api/src/api/v1/index.ts","webpack:///./apps/api/src/database.ts","webpack:///./apps/api/src/entitiy/currentCryptocurrency/currentCryptocurrency.ts","webpack:///./apps/api/src/entitiy/currentCryptocurrency/index.ts","webpack:///./apps/api/src/entitiy/index.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/api-util/src/index.ts","webpack:///./libs/api-util/src/lib/logger.ts","webpack:///external \"axios\"","webpack:///external \"colors\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Router } from \"express\";\n\nimport v1 from \"./v1\";\n\nconst router = Router();\n\nrouter.use(\"/v1\", v1);\n\nexport default router;\n","import { Request, Response } from \"express\";\nimport { logger } from \"@coin-line/api-util\";\nimport { COINMACAP, XCMCPROAPIKEY } from \"../../../config/config.json\";\nimport axios from \"axios\";\n\nexport default async (req: Request, res: Response) => {\n\tconst CRYPTO_ID = Number(req.query.id);\n\ttry {\n\t\tconst { data } = await axios.get(\n\t\t\t`${COINMACAP}/cryptocurrency/quotes/latest?id=${CRYPTO_ID}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"X-CMC_PRO_API_KEY\": `${XCMCPROAPIKEY}`,\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t\tlogger.green(`Success -> CRYPTO_ID : ${CRYPTO_ID} `);\n\t\tres.status(200).json({\n\t\t\tstatus: 200,\n\t\t\tmessage: \"success\",\n\t\t\tdata,\n\t\t});\n\t} catch (err) {\n\t\tlogger.red(err);\n\t\treturn err;\n\t}\n};\n","import { Router } from \"express\";\nimport coinInfo from \"./cryptoInfo\";\n\nconst router = Router();\n\nrouter.get(\"/coinInfo\", coinInfo);\n\nexport default router;\n","import { Request, Response } from \"express\";\nimport { getRepository } from \"typeorm\";\nimport { CryptoCurrency } from \"../../../entitiy/currentCryptocurrency\";\nimport { logger } from \"@coin-line/api-util\";\n\nexport default async (req: Request, res: Response) => {\n\ttry {\n\t\tconst coinRepo = getRepository(CryptoCurrency);\n\t\tconst coinData = await coinRepo.find();\n\n\t\tlogger.yellow(\"CoinAPI\");\n\n\t\tres.status(200).json({\n\t\t\tstatus: 200,\n\t\t\tmessage: \"CoinData\",\n\t\t\tdata: { coinData },\n\t\t});\n\t} catch (err) {\n\t\treturn err;\n\t}\n};\n","import { Router } from \"express\";\nimport coin from \"./Coin\";\n\nconst router = Router();\n\nrouter.get(\"/coin\", coin);\n\nexport default router;\n","import { Router } from \"express\";\nimport coin from \"./cryptoMap\";\nimport coinInfo from \"./cryptoInfo\";\nconst router = Router();\n\nrouter.use(\"/coin\", coin, coinInfo);\n// router.use(\"/coin\", coinInfo);\nexport default router;\n","import { Connection, createConnection, ConnectionOptions } from \"typeorm\";\nimport { logger } from \"@coin-line/api-util\";\nimport entities from \"./entitiy\";\n\nexport const getConnection = async (): Promise<Connection> => {\n\tconst connectionOptions: ConnectionOptions = {\n\t\ttype: \"mysql\",\n\t\thost: \"localhost\",\n\t\tport: 3306,\n\t\tusername: \"root\",\n\t\tpassword: \"1234\",\n\t\tdatabase: \"Coin\",\n\t\tsynchronize: false,\n\t\tlogging: false,\n\t\tentities: entities,\n\t\tmigrations: [\"src/migration/**/*.ts\"],\n\t\tsubscribers: [\"src/subscriber/**/*.ts\"],\n\t\tcli: {\n\t\t\tentitiesDir: \"src/entity\",\n\t\t\tmigrationsDir: \"src/migration\",\n\t\t\tsubscribersDir: \"src/subscriber\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst connection = createConnection(connectionOptions);\n\t\tlogger.green(\"[SERVER / DB] connected\");\n\t\treturn connection;\n\t} catch (err) {\n\t\tlogger.red(\"[SERVER / DB] Connection Error\", err.message);\n\t}\n};\n","import {\n\tEntity,\n\tColumn,\n\tPrimaryColumn,\n\tBaseEntity,\n\tPrimaryGeneratedColumn,\n} from \"typeorm\";\n\n@Entity(\"cryptoCurrency\")\nexport default class CryptoCurrency extends BaseEntity {\n\t@PrimaryGeneratedColumn()\n\tid: number;\n\n\t@PrimaryColumn({\n\t\tlength: 255,\n\t\tnullable: false,\n\t})\n\tname: string;\n\n\t@Column({\n\t\tlength: 255,\n\t\tnullable: false,\n\t})\n\tsymbol: string;\n\n\t@Column({\n\t\tlength: 255,\n\t\tnullable: false,\n\t})\n\tslug: string;\n\n\t@Column({\n\t\tnullable: false,\n\t})\n\trank: number;\n\n\t@Column({\n\t\tnullable: false,\n\t})\n\tis_active: number;\n\n\t@Column({\n\t\tlength: 255,\n\t\tnullable: false,\n\t})\n\tfirst_historical_data: string;\n\n\t@Column({\n\t\tlength: 255,\n\t\tnullable: false,\n\t})\n\tlast_historical_data: string;\n}\n","export { default as CryptoCurrency } from \"./currentCryptocurrency\";\n","import { CryptoCurrency } from \"./currentCryptocurrency\";\n\nconst entitise = [CryptoCurrency];\n\nexport default entitise;\n","import * as express from \"express\";\nimport * as cors from \"cors\";\nimport { Message } from \"@coin-line/api-interfaces\";\nimport * as database from \"./database\";\nimport api from \"./api\";\nconst app = express();\n\nconst greeting: Message = { message: \"Welcome to api!\" };\ndatabase.getConnection();\n\napp.use(cors());\n\n\napp.get(\"/api\", (req, res) => {\n\tres.send(greeting);\n});\n\napp.use(\"/api\", api);\n\nconst port = process.env.port || 3333;\nconst server = app.listen(port, () => {\n\tconsole.log(\"Listening at http://localhost:\" + port + \"/api\");\n});\nserver.on(\"error\", console.error);\n","export { default as logger } from \"./lib/logger\";\n","import * as colors from \"colors\";\n\nconst red = (...str: string[]) => {\n\tstr.forEach((e: string) => {\n\t\tconsole.log(colors.red(e));\n\t});\n};\n\nconst green = (...str: string[]) => {\n\tstr.forEach((e: string) => {\n\t\tconsole.log(colors.green(e));\n\t});\n};\n\nconst yellow = (...str: string[]) => {\n\tstr.forEach((e: string) => {\n\t\tconsole.log(colors.yellow(e));\n\t});\n};\n\nconst gray = (...str: string[]) => {\n\tstr.forEach((e: string) => {\n\t\tconsole.log(colors.gray(e));\n\t});\n};\n\nconst grey = (...str: string[]) => {\n\tstr.forEach((e: string) => {\n\t\tconsole.log(colors.grey(e));\n\t});\n};\n\nexport default {\n\tred,\n\tgreen,\n\tyellow,\n\tgrey,\n\tgray,\n};\n","module.exports = require(\"axios\");","module.exports = require(\"colors\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}